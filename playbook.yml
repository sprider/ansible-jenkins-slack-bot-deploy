- name: Python App Installation
  hosts: bot_hosts
  become: true
  vars:
    execution_username: ubuntu
    python_version: python3
    pip_path: /usr/bin/pip3
    bash_path: /bin/bash
    virtualenv_path: /usr/local/bin/virtualenv
    code_deployment_path: /opt/apps/hello-bot
    python_requirements_file_name: requirements.txt
    sh_bot_management_file_name: manage_bot.sh
    bot_operation: start
    venv_folder_name: .venv
    folder_permission: 0777
    os_environment:
      - key: SLACK_BOT_TOKEN
        value: "{{ slack_bot_token_value }}"
      - key: SLACK_APP_TOKEN
        value: "{{ slack_app_token_value }}"
  pre_tasks:
    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Install python pip3
      apt:
        pkg:
          - python3-pip

    - name: Install virtualenv python package
      pip:
        name: virtualenv
        executable: "{{ pip_path }}"

  tasks:
    - name: Creates code deployment directory
      file:
        path: "{{ code_deployment_path }}"
        state: directory
        mode: "{{ folder_permission }}"
        recurse: yes
        owner: "{{ execution_username }}"
        group: "{{ execution_username }}"

    - name: Add SLACK_BOT_TOKEN and SLACK_APP_TOKEN environment variable to the bash profile
      lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
        backup: true
      with_items: "{{ os_environment }}"
    
    - name: Refresh environment values
      shell: . ~/.bashrc
      args:
        executable: "{{ bash_path }}"

    - name: Copy code from Jenkins workspace to code deployment directory
      copy:
        dest: "{{ code_deployment_path }}"
        src: "{{ jenkins_workspace_path }}/src/"
        mode: "{{ folder_permission }}"
        owner: "{{ execution_username }}"
        group: "{{ execution_username }}"

    - name: Create Python virtual environment and install app requirements
      pip:
        requirements: "{{ code_deployment_path }}/{{ python_requirements_file_name }}"
        virtualenv: "{{ code_deployment_path }}/{{ venv_folder_name }}"
        virtualenv_python: "{{ python_version }}"
        virtualenv_command: "{{ virtualenv_path }}"
      become_user: "{{ execution_username }}"

    - name: Activate Python
      shell: "source {{ venv_folder_name }}/bin/activate"
      args:
        chdir: "{{ code_deployment_path }}/"
        executable: "{{ bash_path }}"
      become_user: "{{ execution_username }}"

    - name: Start Slack bot
      shell: "sh {{ sh_bot_management_file_name }} {{ bot_operation }}"
      args:
        chdir: "{{ code_deployment_path }}/"
        executable: "{{ bash_path }}"
      become_user: "{{ execution_username }}"
      register: bot_deploy_status

    - name: Print bot deploy status
      debug: var=bot_deploy_status.stdout
